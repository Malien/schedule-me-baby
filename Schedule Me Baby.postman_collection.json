{
	"info": {
		"_postman_id": "7d3184d9-8cea-4b14-ad11-7fa87b2157fc",
		"name": "Schedule Me Baby",
		"description": "A service for scheduling course timetables",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "timeslot",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Retrieve timeslot by it's id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/timeslot/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"timeslot",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Found timeslot",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/timeslot/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"timeslot",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"auditorium\": \"nostrud esse occaecat\",\n \"clazz\": 7,\n \"day\": 3,\n \"id\": 26901040,\n \"weeks\": \"minim ad\"\n}"
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/timeslot/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"timeslot",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "delete Timeslot By Id",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/timeslot/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"timeslot",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/timeslot/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"timeslot",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update existing timeslot",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"day\": \"<integer>\",\n    \"clazz\": \"<integer>\",\n    \"auditorium\": \"<string>\",\n    \"weeks\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/timeslot/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"timeslot",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Timeslot cannot be found",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"day\": \"<integer>\",\n    \"clazz\": \"<integer>\",\n    \"auditorium\": \"<string>\",\n    \"weeks\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/timeslot/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"timeslot",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Updated timeslot",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"day\": \"<integer>\",\n    \"clazz\": \"<integer>\",\n    \"auditorium\": \"<string>\",\n    \"weeks\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/timeslot/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"timeslot",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"auditorium\": \"nostrud esse occaecat\",\n \"clazz\": 7,\n \"day\": 3,\n \"id\": 26901040,\n \"weeks\": \"minim ad\"\n}"
								},
								{
									"name": "Invalid request",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"day\": \"<integer>\",\n    \"clazz\": \"<integer>\",\n    \"auditorium\": \"<string>\",\n    \"weeks\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/timeslot/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"timeslot",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Retrieve all timeslots",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/timeslot/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"timeslot",
								""
							]
						}
					},
					"response": [
						{
							"name": "All timeslots",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/timeslot/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"timeslot",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"auditorium\": \"sint id\",\n  \"clazz\": 4,\n  \"day\": 1,\n  \"id\": -18427845,\n  \"weeks\": \"nisi cons\"\n },\n {\n  \"auditorium\": \"exercita\",\n  \"clazz\": 5,\n  \"day\": 1,\n  \"id\": -85852135,\n  \"weeks\": \"irure consequat officia\"\n }\n]"
						}
					]
				},
				{
					"name": "Create new timeslot",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"auditorium\": \"<string>\",\n    \"clazz\": \"<integer>\",\n    \"day\": \"<integer>\",\n    \"groupId\": \"<long>\",\n    \"weeks\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/timeslot/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"timeslot",
								""
							]
						}
					},
					"response": [
						{
							"name": "Invalid request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"auditorium\": \"<string>\",\n    \"clazz\": \"<integer>\",\n    \"day\": \"<integer>\",\n    \"groupId\": \"<long>\",\n    \"weeks\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/timeslot/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"timeslot",
										""
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created timeslot",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"auditorium\": \"<string>\",\n    \"clazz\": \"<integer>\",\n    \"day\": \"<integer>\",\n    \"groupId\": \"<long>\",\n    \"weeks\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/timeslot/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"timeslot",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"auditorium\": \"nostrud esse occaecat\",\n \"clazz\": 7,\n \"day\": 3,\n \"id\": 26901040,\n \"weeks\": \"minim ad\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "teacher",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Retrieve teacher by it's id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teacher/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teacher",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/teacher/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"teacher",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Found teacher",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/teacher/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"teacher",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"<long>\",\n \"name\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Delete existing teacher",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teacher/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teacher",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Deleted teacher",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/teacher/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"teacher",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Teacher cannot be found",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/teacher/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"teacher",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update existing teacher",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/teacher/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teacher",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Teacher cannot be found",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/teacher/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"teacher",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Updated teacher",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/teacher/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"teacher",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"<long>\",\n \"name\": \"<string>\"\n}"
								},
								{
									"name": "Teacher name cannot be blank",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/teacher/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"teacher",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Retrieve all teachers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/teacher/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teacher",
								""
							]
						}
					},
					"response": [
						{
							"name": "All teachers",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teacher/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teacher",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": -63789766,\n  \"name\": \"et cupidatat in\"\n },\n {\n  \"id\": 86395669,\n  \"name\": \"ex sit\"\n }\n]"
						}
					]
				},
				{
					"name": "Create new teacher",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/teacher/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teacher",
								""
							]
						}
					},
					"response": [
						{
							"name": "Created teacher",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/teacher/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teacher",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<long>\",\n \"name\": \"<string>\"\n}"
						},
						{
							"name": "Teacher name cannot be blank",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/teacher/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teacher",
										""
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "subject",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Retrieve subject by it's id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/subject/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subject",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/subject/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subject",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Found subject",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/subject/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subject",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": -87188581,\n \"name\": \"do Lorem in\"\n}"
								}
							]
						},
						{
							"name": "Delete existing subject",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/subject/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subject",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Deleted subject",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/subject/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subject",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Subject cannot be found",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/subject/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subject",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update existing subject",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/subject/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subject",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Updated subject",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/subject/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subject",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": -87188581,\n \"name\": \"do Lorem in\"\n}"
								},
								{
									"name": "Subject name cannot be blank",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/subject/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subject",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Subject cannot be found",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/subject/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subject",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Retrieve all subjects",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/subject/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subject",
								""
							]
						}
					},
					"response": [
						{
							"name": "All subjects",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/subject/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subject",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": -63789766,\n  \"name\": \"et cupidatat in\"\n },\n {\n  \"id\": 86395669,\n  \"name\": \"ex sit\"\n }\n]"
						}
					]
				},
				{
					"name": "Create new subject",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/subject/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subject",
								""
							]
						}
					},
					"response": [
						{
							"name": "Subject name cannot be blank",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/subject/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subject",
										""
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created subject",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/subject/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subject",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": -87188581,\n \"name\": \"do Lorem in\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "student",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Get student by id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/student/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"student",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Student not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/student/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"student",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Found student",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/student/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"student",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"id\": -63789766,\n  \"name\": \"et cupidatat in\"\n },\n {\n  \"id\": 86395669,\n  \"name\": \"ex sit\"\n }\n]"
								}
							]
						},
						{
							"name": "Delete Student",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/student/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"student",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Student not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/student/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"student",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Deleted student",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/student/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"student",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update Student",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/student/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"student",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Student's name cannot be blank",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/student/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"student",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Student not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/student/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"student",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Updated student",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/student/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"student",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"id\": -63789766,\n  \"name\": \"et cupidatat in\"\n },\n {\n  \"id\": 86395669,\n  \"name\": \"ex sit\"\n }\n]"
								}
							]
						}
					]
				},
				{
					"name": "Get all students",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/student/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"student",
								""
							]
						}
					},
					"response": [
						{
							"name": "All students",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/student/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"student",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": -63789766,\n  \"name\": \"et cupidatat in\"\n },\n {\n  \"id\": 86395669,\n  \"name\": \"ex sit\"\n }\n]"
						}
					]
				},
				{
					"name": "Create Student",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/student/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"student",
								""
							]
						}
					},
					"response": [
						{
							"name": "Created student",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/student/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"student",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": -63789766,\n  \"name\": \"et cupidatat in\"\n },\n {\n  \"id\": 86395669,\n  \"name\": \"ex sit\"\n }\n]"
						},
						{
							"name": "Student's name cannot be blank",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/student/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"student",
										""
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "group",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Retrieve group by it's id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/group/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"group",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/group/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Found Groups",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/group/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": 25935114,\n \"number\": -8090235,\n \"type\": 51297773\n}"
								}
							]
						},
						{
							"name": "Delete existing group",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/group/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"group",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Deleted group",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/group/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Group by id cannot be found",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/group/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update existing group",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"teacherId\": \"<long>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/group/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"group",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Updated group",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"teacherId\": \"<long>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Subject/Teacher/Group by id cannot be found",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"teacherId\": \"<long>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Retrieve all groups",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/group/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"group",
								""
							]
						}
					},
					"response": [
						{
							"name": "All groups",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/group/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"group",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": -77299606,\n  \"number\": -19074282,\n  \"type\": 77118776\n },\n {\n  \"id\": -47008507,\n  \"number\": -18033225,\n  \"type\": 93452534\n }\n]"
						}
					]
				},
				{
					"name": "Create new group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"number\": \"<integer>\",\n    \"subjectId\": \"<long>\",\n    \"teacherId\": \"<long>\",\n    \"type\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/group/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"group",
								""
							]
						}
					},
					"response": [
						{
							"name": "Created group",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"number\": \"<integer>\",\n    \"subjectId\": \"<long>\",\n    \"teacherId\": \"<long>\",\n    \"type\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/group/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"group",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 25935114,\n \"number\": -8090235,\n \"type\": 51297773\n}"
						},
						{
							"name": "Teacher/Subject by id cannot be found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"number\": \"<integer>\",\n    \"subjectId\": \"<long>\",\n    \"teacherId\": \"<long>\",\n    \"type\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/group/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"group",
										""
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Tests",
			"item": [
				{
					"name": "Able to create teacher",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"function teacherCreated(teacher) {",
									"    const teachers = pm.collectionVariables.get(\"teachers\")",
									"    console.log({ teachers })",
									"    if (!teachers) {",
									"        pm.collectionVariables.set(\"teachers\", [teacher])",
									"        console.log(pm.collectionVariables.toObject())",
									"    } else {",
									"        teachers.push(teacher)",
									"    }",
									"}",
									"",
									"pm.test(\"Expect to receive a valid teacher\", () => {",
									"    const obj = pm.response.json()",
									"    pm.expect(obj.id).to.satisfy(Number.isInteger)",
									"    pm.expect(obj.name).to.equal(\"Biatriss\")",
									"    teacherCreated(obj)",
									"})",
									"",
									"postman.setNextRequest(\"Able to create teacher twice\")"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"teachers\")",
									"pm.collectionVariables.unset(\"currentTeacher\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Biatriss\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/teacher/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teacher",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Able to create teacher twice",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"function teacherCreated(teacher) {",
									"    const teachers = pm.collectionVariables.get(\"teachers\")",
									"    console.log({ teachers })",
									"    if (!teachers) {",
									"        pm.iterationData.set(\"teachers\", [teacher])",
									"        console.log(pm.collectionVariables.toObject())",
									"    } else {",
									"        teachers.push(teacher)",
									"    }",
									"}",
									"",
									"pm.test(\"Expect to receive a valid teacher\", () => {",
									"    const obj = pm.response.json()",
									"    pm.expect(obj.id).to.satisfy(Number.isInteger)",
									"    pm.expect(obj.name).to.equal(\"Bianca\")",
									"    teacherCreated(obj)",
									"})",
									"",
									"postman.setNextRequest(\"Query existing teacher\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Bianca\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/teacher/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teacher",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Query existing teacher",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const [teacher] = pm.collectionVariables.get(\"teachers\")",
									"console.log(\"query currentTeacher\", { teacher })",
									"pm.collectionVariables.set(\"currentTeacher\", teacher)",
									"",
									"pm.variables.set(\"teacherId\", teacher.id)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Expect to recieve teacher created earlier\", () => {",
									"    const obj = pm.response.json()",
									"    const currentTeacher = pm.collectionVariables.get(\"currentTeacher\")",
									"    console.log({ currentTeacher })",
									"    for (const [key, value] of Object.entries(currentTeacher)) {",
									"        pm.expect(obj[key]).to.equal(value)",
									"    }",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/teacher/{{teacherId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teacher",
								"{{teacherId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update existing teacher",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const [teacher] = pm.collectionVariables.get(\"teachers\")",
									"teacher.name = \"Stephan\"",
									"pm.collectionVariables.set(\"currentTeacher\", teacher)",
									"",
									"pm.variables.set(\"teacherId\", teacher.id)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Expect to recieve updated teacher\", () => {",
									"    const obj = pm.response.json()",
									"    const currentTeacher = pm.collectionVariables.get(\"currentTeacher\")",
									"    for (const [key, value] of Object.entries(currentTeacher)) {",
									"        pm.expect(obj[key]).to.equal(value)",
									"    }",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"name\": \"Stephan\" }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/teacher/{{teacherId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teacher",
								"{{teacherId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete existing teacher",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const teachers = pm.collectionVariables.get(\"teachers\")",
									"const currentTeacher = teachers[teachers.length - 1]",
									"pm.collectionVariables.set(",
									"    \"teachers\", ",
									"    teachers.filter(({ id }) => currentTeacher.id != id)",
									")",
									"",
									"pm.variables.set(\"teacherId\", currentTeacher.id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/teacher/{{teacherId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teacher",
								"{{teacherId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Expect to see current teachers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Expect to see all created/updated teachers correctly\", () => {",
									"    const res = pm.response",
									"        .json()",
									"        .reduce((obj, { id, name }) => ({ ...obj, [id]: name }))",
									"",
									"    for (const { id, name } of pm.collectionVariables.get(\"teachers\")) {",
									"        pm.expect(res[id]).to.equal(name)",
									"    }",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/teacher/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teacher",
								""
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080"
		},
		{
			"key": "teachers",
			"value": ""
		},
		{
			"key": "currentTeacher",
			"value": ""
		}
	]
}